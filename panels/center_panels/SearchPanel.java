/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.center_panels;

import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import model.DBConnection;
import panel_control.CenterPanel_Listener;
import view.confirmItemFrame;

/**
 *
 * @author amiel
 */
public class SearchPanel extends javax.swing.JPanel {
    private CenterPanel_Listener cpl;
    /**
     * Creates new form searchPanel
     */
    public SearchPanel(CenterPanel_Listener cpl) {
        this.cpl = cpl;
        initComponents();
    }
    public void setResults(String[] s){
        if(s.length == 0){
            s = new String[]{"No results found!"};
        }
        list.setListData(s);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        centerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        selectItemBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 255));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));

        searchLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 36)); // NOI18N
        searchLabel.setText("Search");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(searchLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchLabel)
                .addGap(30, 30, 30))
        );

        centerPanel.setBackground(new java.awt.Color(255, 255, 255));

        /*
        list.setModel(
        });
        */
        list.setVisibleRowCount(16);
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout centerPanelLayout = new javax.swing.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
        );

        selectItemBtn.setBackground(new java.awt.Color(255, 255, 255));
        selectItemBtn.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        selectItemBtn.setText("Select Item");
        selectItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectItemBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(centerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(selectItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectItemBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private boolean withinDate(String start, String end){
        try{
            start = start.split(" ")[0];
            end = end.split(" ")[0];

            int start2 = Integer.parseInt(start.split("-")[0] + start.split("-")[1] + start.split("-")[2]);
            int end2 = Integer.parseInt(end.split("-")[0] + end.split("-")[1] + end.split("-")[2]);

            int now = Integer.parseInt(new SimpleDateFormat("yyyyMMdd").format(Calendar.getInstance().getTime()));
            if(start2 <= now && end2 > now){
                return true;
            }
            return false;
        }catch(Exception e){
            return false;
        }
    }
    private void selectItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectItemBtnActionPerformed
        int AccId = cpl.getMfl().getAccount().getUserId();
        int itemId = 0;
        int max;
        StringBuilder sb = new StringBuilder();
        sb.append("Item Name: " + list.getSelectedValue() + "\n");
        try{
            DBConnection dbc = new DBConnection();
            ResultSet rs = dbc.executeQuery("SELECT itemPrice, salePrice,saleStart,saleEnd, itemId, itemName, categoryName, companyName, stock\n" +
                                            "FROM items i, category cat, company c\n" +
                                            "WHERE i.categoryID = cat.categoryID AND\n" +
                                            "i.companyID = c.companyID AND\n" +
                                            "i.itemName = '" + list.getSelectedValue() + "'");
            rs.next();
            itemId = rs.getInt("itemId");
            sb.append("Category: " + rs.getString("categoryName") + "\n");
            sb.append("Company: "+ rs.getString("companyName") + "\n");
            sb.append("Stock Left: " + rs.getString("stock") + "\n");
            
            if(withinDate(rs.getString("saleStart"), rs.getString("saleEnd"))){
                sb.append("Original Price: P" + rs.getString("itemPrice") + "\n");
                sb.append("Current Price: P" + rs.getString("salePrice"));
            }else{
                sb.append("Price: P" + rs.getString("itemPrice"));
            }
            
            max = rs.getInt("stock");
            new confirmItemFrame(sb.toString(), AccId, itemId, max, cpl);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_selectItemBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JButton selectItemBtn;
    // End of variables declaration//GEN-END:variables
}
